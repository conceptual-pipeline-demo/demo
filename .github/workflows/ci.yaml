name: Continuous integration

on:
  push:
    branches:
      - master
    paths:
      - src/**
      - .github/workflows/ci.yaml

  pull_request:
    branches:
      - master
    paths:
      - src/**
      - .github/workflows/ci.yaml

  workflow_dispatch:

env:
  AWS_REGION: ap-southeast-2
  AWS_ROLE_ARN: arn:aws:iam::160071257600:role/conceptual-pipeline-deployment

permissions:
  id-token: write # Allow connections to AWS
  contents: read # Allow access to repository contents

jobs:
  build_artifacts:
    name: Build artifacts
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '17'
          cache: 'gradle'
          cache-dependency-path: |
            **/*.gradle*
            **/gradle-wrapper.properties
      - name: Run build
        uses: ./.github/actions/gradle_build
        with:
          working-dir: ./
      - name: Build docker image
        run: docker build . --file Dockerfile --tag pipeline-demo:$(date +%s)
        shell: bash
      - name: Upload test coverage reports
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          flags: unit_tests
          directory: ./build/reports/jacoco/test/
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  deploy-dev:
    name: Deploy to dev
    runs-on: ubuntu-latest
    needs:
      - build_artifacts
    steps:
      - uses: actions/checkout@v4
      - name: helm deploy
        uses: ./.github/actions/helm-deploy
        with:
          namespace: dev
          aws-role-arn: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
          image-repo: nginx
          image-tag: latest
