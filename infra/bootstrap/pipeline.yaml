---
AWSTemplateFormatVersion: '2010-09-09'
Mappings:
  AccountIdMap:
    Accounts:
      BreachAccount: '160071257600'

Resources:
  GithubActionsProvider:
    Type: AWS::IAM::OIDCProvider
    Properties:
      Url: https://token.actions.githubusercontent.com
      ClientIdList:
        - sts.amazonaws.com
      ThumbprintList:
        - 6938fd4d98bab03faadb97b34396831e3780aea1
        - 1c58a3a8518e8759bf075b76b750d4f2df264fcd

  DeploymentRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: conceptual-pipeline-deployment
      Description: A role for running deployments and managing infrastructure
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowGithubActionsAssumeRole
            Effect: Allow
            Action: sts:AssumeRoleWithWebIdentity
            Principal:
              Federated: !Sub 'arn:aws:iam::${AWS::AccountId}:oidc-provider/token.actions.githubusercontent.com'
            Condition:
              StringEquals:
                'token.actions.githubusercontent.com:aud': 'sts.amazonaws.com'
              StringLike:
                "token.actions.githubusercontent.com:sub": "repo:conceptual-pipeline-demo/demo:*"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/PowerUserAccess
#        - !Ref IAMDeploymentPolicy

#  IAMDeploymentPolicy:
#    Type: AWS::IAM::ManagedPolicy
#    Properties:
#      ManagedPolicyName: IAMDeploymentPolicy
#      Description: A policy that allow managing IAM resources
#      PolicyDocument:
#        Version: '2012-10-17'
#        Statement:
#          - Sid: AllowIAM
#            Effect: Allow
#            Action:
#              - iam:*
#            Resource:
#              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/le-*'
#              - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/le-*'
#              - !Sub 'arn:aws:iam::${AWS::AccountId}:user/le-*'
#              - !Sub 'arn:aws:iam::${AWS::AccountId}:instance-profile/le-*'
#              - !Sub 'arn:aws:iam::754728514883:role/observability/*' # It's a NewRelic Account ID
#          - Sid: IAMPermissionRequiredByConfiguringAutoScaling
#            Effect: Allow
#            Action:
#              - iam:PassRole
#            Resource:
#              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService'
#
